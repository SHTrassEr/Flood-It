// Generated by CoffeeScript 1.2.1-pre
(function() {
  var FloodIt, root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  if (root.FloodIt === void 0) root.FloodIt = {};

  FloodIt = root.FloodIt;

  FloodIt.View = (function() {

    View.name = 'View';

    function View(canvas) {
      this.canvas = canvas;
      this.context = canvas.getContext('2d');
      this.colorsArray = [];
    }

    View.prototype.print = function(playGround) {
      var cnt, columnIndex, groundValue, rowIndex, _i, _ref, _results;
      this.context.fillStyle = '#00f';
      cnt = 0;
      _results = [];
      for (rowIndex = _i = 0, _ref = playGround.rowCount - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; rowIndex = 0 <= _ref ? ++_i : --_i) {
        _results.push((function() {
          var _j, _ref2, _results2;
          _results2 = [];
          for (columnIndex = _j = 0, _ref2 = playGround.columnCount - 1; 0 <= _ref2 ? _j <= _ref2 : _j >= _ref2; columnIndex = 0 <= _ref2 ? ++_j : --_j) {
            groundValue = playGround.getCellValue(new FloodIt.Point(rowIndex, columnIndex));
            this.context.fillStyle = '#f00';
            if (this.colorsArray[groundValue] !== void 0) {
              this.context.fillStyle = this.colorsArray[groundValue];
            }
            _results2.push(this.context.fillRect(this.canvas.width / playGround.columnCount * columnIndex, this.canvas.height / playGround.rowCount * rowIndex, this.canvas.width / playGround.columnCount * (columnIndex + 1), this.canvas.height / playGround.rowCount * (rowIndex + 1)));
          }
          return _results2;
        }).call(this));
      }
      return _results;
    };

    return View;

  })();

}).call(this);
